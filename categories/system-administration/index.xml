<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>System administration on Notes to self</title><link>https://bertvv.github.io/notes-to-self/categories/system-administration/</link><description>Recent content in System administration on Notes to self</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 21 Sep 2021 00:46:21 +0200</lastBuildDate><atom:link href="https://bertvv.github.io/notes-to-self/categories/system-administration/index.xml" rel="self" type="application/rss+xml"/><item><title>File Globbing and Hidden Files</title><link>https://bertvv.github.io/notes-to-self/2021/09/21/file-globbing-and-hidden-files/</link><pubDate>Tue, 21 Sep 2021 00:46:21 +0200</pubDate><guid>https://bertvv.github.io/notes-to-self/2021/09/21/file-globbing-and-hidden-files/</guid><description>&lt;p>A student asked me some time ago:&lt;/p>
&lt;blockquote>
&lt;p>When I execute &lt;code>rm *.bak&lt;/code>, hidden files aren&amp;rsquo;t removed. Don&amp;rsquo;t they match the globbing pattern?&lt;/p>
&lt;/blockquote></description></item><item><title>Automating `mysql_secure_installation`</title><link>https://bertvv.github.io/notes-to-self/2015/11/16/automating-mysql_secure_installation/</link><pubDate>Mon, 16 Nov 2015 16:07:42 +0100</pubDate><guid>https://bertvv.github.io/notes-to-self/2015/11/16/automating-mysql_secure_installation/</guid><description>&lt;p>Many HOWTO&amp;rsquo;s and blog posts about installing MySQL/MariaDB, a LAMP stack, etc. suggest to run the script &lt;code>mysql_secure_installation&lt;/code> to tighten the security holes in the default installation of the database engine. This includes setting a root password (empty by default), removing anonymous users, and deleting a test database. For a database server that you&amp;rsquo;re going to run in production, it is really important to do this. However, I have a problem with the fact that &lt;code>mysql_secure_installation&lt;/code> is interactive, i.e. it asks for user input. This makes it very hard to include it in an automated setup. In this post, we&amp;rsquo;ll discuss how the script works and how we can automate what it does.&lt;/p></description></item><item><title>Installing VirtualBox Guest Additions in Fedora 22</title><link>https://bertvv.github.io/notes-to-self/2015/10/08/installing-virtualbox-guest-additions-in-fedora-22/</link><pubDate>Thu, 08 Oct 2015 19:06:48 +0200</pubDate><guid>https://bertvv.github.io/notes-to-self/2015/10/08/installing-virtualbox-guest-additions-in-fedora-22/</guid><description>&lt;p>VirtualBox Guest additions are a set of drivers that you can install on virtual machines to enable a few cool features: a scaling desktop in the VM, shared clipboard, shared folders, etc. This post discusses how to install these in Fedora 22.&lt;/p></description></item><item><title>Easily switch between Hyper-V and VirtualBox</title><link>https://bertvv.github.io/notes-to-self/2015/10/08/easily-switch-between-hyper-v-and-virtualbox/</link><pubDate>Thu, 08 Oct 2015 10:51:07 +0200</pubDate><guid>https://bertvv.github.io/notes-to-self/2015/10/08/easily-switch-between-hyper-v-and-virtualbox/</guid><description>&lt;p>Hyper-V and VirtualBox are two virtualization platforms that we both use in our system administration courses. Unfortunately, once Hyper-V is active, it won&amp;rsquo;t coexist with other virtualization platforms. In this post, I discuss a method to work around this problem by setting up a custom boot entry for each platform.&lt;/p></description></item><item><title>One Vagrantfile to rule them all</title><link>https://bertvv.github.io/notes-to-self/2015/10/05/one-vagrantfile-to-rule-them-all/</link><pubDate>Mon, 05 Oct 2015 16:59:14 +0200</pubDate><guid>https://bertvv.github.io/notes-to-self/2015/10/05/one-vagrantfile-to-rule-them-all/</guid><description>&lt;p>Writing Vagrantfiles is tedious, especially when you&amp;rsquo;re setting up a multi-VM environment. Typically, people will copy/paste code blocks that define hosts, but that becomes unwieldy. However, a Vagrantfile is &amp;ldquo;just&amp;rdquo; Ruby, so can&amp;rsquo;t we simplify things a bit using the power of the language? Turns out, we can! Read below to find how you can reduce setting up a multi-VM Vagrant environment to writing a simple YAML file.&lt;/p></description></item><item><title>VirtualBox Networking: an overview</title><link>https://bertvv.github.io/notes-to-self/2015/09/29/virtualbox-networking-an-overview/</link><pubDate>Tue, 29 Sep 2015 20:58:28 +0200</pubDate><guid>https://bertvv.github.io/notes-to-self/2015/09/29/virtualbox-networking-an-overview/</guid><description>&lt;p>One of the greatest pitfalls when working with VirtualBox VMs is a good understanding of how networking works. In this post, we&amp;rsquo;ll discuss the most important differences between them, and their limitations when you use VirtualBox to experiment with setting up network services on a VM.&lt;/p>
&lt;p>In our system administration courses, we use VirtualBox to allow students to set up their own Linux machines without having to resort to dual booting. VirtualBox is certainly not the &amp;ldquo;best&amp;rdquo; virtualization platform, but it is supported on the three common desktop platforms and works similarly on all of them.&lt;/p></description></item></channel></rss>