<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Notes to self</title>
    <link>https://bertvv.github.io/notes-to-self/post/</link>
    <description>Recent content in Posts on Notes to self</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Dec 2015 16:00:32 +0100</lastBuildDate><atom:link href="https://bertvv.github.io/notes-to-self/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testing Ansible roles with Travis-CI, Part 2: Multi-platform tests</title>
      <link>https://bertvv.github.io/notes-to-self/2015/12/13/testing-ansible-roles-with-travis-ci-part-2-multi-platform-tests/</link>
      <pubDate>Sun, 13 Dec 2015 16:00:32 +0100</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/12/13/testing-ansible-roles-with-travis-ci-part-2-multi-platform-tests/</guid>
      <description>&lt;p&gt;In the &lt;a href=&#34;https://bertvv.github.io/notes-to-self/2015/12/11/testing-ansible-roles-with-travis-ci-part-1-centos&#34;&gt;previous post on testing Ansible roles with Travis-CI&lt;/a&gt;, I introduced a method to run playbooks on CentOS using Docker. In this post, we take this one step further and show how you can run multi-platform tests of Ansible roles.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Testing Ansible roles with Travis-CI, Part 1: CentOS</title>
      <link>https://bertvv.github.io/notes-to-self/2015/12/11/testing-ansible-roles-with-travis-ci-part-1-centos/</link>
      <pubDate>Fri, 11 Dec 2015 20:49:16 +0100</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/12/11/testing-ansible-roles-with-travis-ci-part-1-centos/</guid>
      <description>&lt;p&gt;In this first post on testing Ansible roles with Travis-CI, we&amp;rsquo;ll discuss how you can apply a test playbook on CentOS. Out-of-the-box, Travis-CI doesn&amp;rsquo;t support CentOS, as its test environment is Ubuntu-based. However, Travis-CI allows you to set up a Docker container and this opens up all kinds of possibilities.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automating `mysql_secure_installation`</title>
      <link>https://bertvv.github.io/notes-to-self/2015/11/16/automating-mysql_secure_installation/</link>
      <pubDate>Mon, 16 Nov 2015 16:07:42 +0100</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/11/16/automating-mysql_secure_installation/</guid>
      <description>&lt;p&gt;Many HOWTO&amp;rsquo;s and blog posts about installing MySQL/MariaDB, a LAMP stack, etc. suggest to run the script &lt;code&gt;mysql_secure_installation&lt;/code&gt; to tighten the security holes in the default installation of the database engine. This includes setting a root password (empty by default), removing anonymous users, and deleting a test database. For a database server that you&amp;rsquo;re going to run in production, it is really important to do this. However, I have a problem with the fact that &lt;code&gt;mysql_secure_installation&lt;/code&gt; is interactive, i.e. it asks for user input. This makes it very hard to include it in an automated setup. In this post, we&amp;rsquo;ll discuss how the script works and how we can automate what it does.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The number of hard links in ‘ls -l’</title>
      <link>https://bertvv.github.io/notes-to-self/2015/10/18/the-number-of-hard-links-in-ls-l/</link>
      <pubDate>Sun, 18 Oct 2015 09:46:19 +0200</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/10/18/the-number-of-hard-links-in-ls-l/</guid>
      <description>&lt;p&gt;When you execute the command &lt;code&gt;ls -l&lt;/code&gt; in UNIX, you get detailed information about files: permissions, file size, date of last modification, etc. A while ago, I got a question from one of my students who wondered what the second column meant. According to the documentation, it&amp;rsquo;s the &amp;ldquo;number of hard links,&amp;rdquo; but what does that actually mean? Let&amp;rsquo;s get to the bottom of this.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing VirtualBox Guest Additions in Fedora 22</title>
      <link>https://bertvv.github.io/notes-to-self/2015/10/08/installing-virtualbox-guest-additions-in-fedora-22/</link>
      <pubDate>Thu, 08 Oct 2015 19:06:48 +0200</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/10/08/installing-virtualbox-guest-additions-in-fedora-22/</guid>
      <description>&lt;p&gt;VirtualBox Guest additions are a set of drivers that you can install on virtual machines to enable a few cool features: a scaling desktop in the VM, shared clipboard, shared folders, etc. This post discusses how to install these in Fedora 22.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Easily switch between Hyper-V and VirtualBox</title>
      <link>https://bertvv.github.io/notes-to-self/2015/10/08/easily-switch-between-hyper-v-and-virtualbox/</link>
      <pubDate>Thu, 08 Oct 2015 10:51:07 +0200</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/10/08/easily-switch-between-hyper-v-and-virtualbox/</guid>
      <description>&lt;p&gt;Hyper-V and VirtualBox are two virtualization platforms that we both use in our system administration courses. Unfortunately, once Hyper-V is active, it won&amp;rsquo;t coexist with other virtualization platforms. In this post, I discuss a method to work around this problem by setting up a custom boot entry for each platform.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>One Vagrantfile to rule them all</title>
      <link>https://bertvv.github.io/notes-to-self/2015/10/05/one-vagrantfile-to-rule-them-all/</link>
      <pubDate>Mon, 05 Oct 2015 16:59:14 +0200</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/10/05/one-vagrantfile-to-rule-them-all/</guid>
      <description>&lt;p&gt;Writing Vagrantfiles is tedious, especially when you&amp;rsquo;re setting up a multi-VM environment. Typically, people will copy/paste code blocks that define hosts, but that becomes unwieldy. However, a Vagrantfile is &amp;ldquo;just&amp;rdquo; Ruby, so can&amp;rsquo;t we simplify things a bit using the power of the language? Turns out, we can! Read below to find how you can reduce setting up a multi-VM Vagrant environment to writing a simple YAML file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VirtualBox Networking: an overview</title>
      <link>https://bertvv.github.io/notes-to-self/2015/09/29/virtualbox-networking-an-overview/</link>
      <pubDate>Tue, 29 Sep 2015 20:58:28 +0200</pubDate>
      
      <guid>https://bertvv.github.io/notes-to-self/2015/09/29/virtualbox-networking-an-overview/</guid>
      <description>&lt;p&gt;One of the greatest pitfalls when working with VirtualBox VMs is a good understanding of how networking works. In this post, we&amp;rsquo;ll discuss the most important differences between them, and their limitations when you use VirtualBox to experiment with setting up network services on a VM.&lt;/p&gt;
&lt;p&gt;In our system administration courses, we use VirtualBox to allow students to set up their own Linux machines without having to resort to dual booting. VirtualBox is certainly not the &amp;ldquo;best&amp;rdquo; virtualization platform, but it is supported on the three common desktop platforms and works similarly on all of them.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
